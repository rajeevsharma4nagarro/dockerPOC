services:
    app-ui:
        build:
            context: ./usersapp           # Path to the app directory
            dockerfile: Dockerfile        # Optional if named 'Dockerfile'
        container_name: app-ui
        ports:
            - "${FRONTEND_PORT}:80"
        depends_on:
            - api-service
        networks:
            - app-network
            
    api-service:
        build:
            context: ./usersapi           # Path to the app directory
            dockerfile: Dockerfile        # Optional if named 'Dockerfile'        
        container_name: api-service
        ports:
            - "3000:3000"
        depends_on:
            - mongodb
            - cache-service
        networks:
            - app-network
            
    mongodb:
        image: mongo:8.0
        container_name: mongodb
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_UID}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PWD}
        ports:
            - "27017:27017"
        volumes:
            - mongo-data:/data/db
        networks:
            - app-network
            
    cache-service:
        image: redis:8.2.0
        container_name: cache-service
        command: redis-server --appendonly yes --save 60 1 --requirepass "${REDIS_PWD}"
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        networks:
            - app-network
            
volumes:
    mongo-data:
        name: mongo-data
    redis-data:
        name: redis-data
        
networks:
    app-network:
        name: app-network
        driver: bridge
